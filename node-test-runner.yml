parameters:
  id: 'NodeTestRunner'
  name: 'Test'
  vmImage: 'ubuntu-16.04'
  vmOS: 'Linux'
  node_version: 10.x
  package_manager: 'yarn'
  before: []
  after: []
  azure_coverage: False

jobs:
- job: ${{ parameters.id }}
  displayName: ${{ format('{0} ({1}, Node {2})', parameters.name, parameters.vmOS, parameters.node_version) }}
  pool: 
    vmImage: ${{ parameters.vmImage }}
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: ${{ parameters.node_version }}
    displayName: 'Install Node.js'
  - ${{ if eq(parameters.package_manager, 'npm') }}:
    - script: npm install
      displayName: 'Instal dependencies from NPM'
  - ${{ if eq(parameters.package_manager, 'yarn') }}:
    - script: yarn install --ignore-engines
      displayName: 'Instal dependencies using Yarn'
  - ${{ parameters.before }}
  - script: npm test
    displayName: 'Run tests'
  - ${{ parameters.after }}
  - ${{ if eq(parameters.azure_coverage, True) }}:
    - task: PublishTestResults@2
      displayName: 'Publish test results (Azure Pipelines)'
      condition: succeededOrFailed()
      inputs:
        testRunner: JUnit
        testResultsFiles: 'coverage/junit.xml'
    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage results (Azure Pipelines)'
      inputs: 
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml'
        reportDirectory: '$(System.DefaultWorkingDirectory)/coverage/lcov-report'
